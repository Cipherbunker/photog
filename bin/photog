#!/usr/bin/perl
use warnings;
use strict;
use feature 'say';
use Photography::Website;
use Config::General;
use Cwd;
use Template; my $tt = Template->new({ABSOLUTE => 1});
use File::ShareDir 'dist_dir';

=head1 NAME

Photog! - The Photography Website Generator

=head1 SYNOPSIS

B<photog> [I<-q>] [I<-v>] [I<destination>]

=head1 DESCRIPTION

Photog! turns a directory tree of source images into a photography
website with nested albums of chronologically sorted photographs. To
get started, simply C<cd> to the source directory and call C<photog>
with the destination directory as its argument. Example:

    $ cd ~/Pictures
    $ photog /var/www

Subsequent runs of the C<photog> command do nothing unless images
inside the source directory tree have changed. Photog! only
regenerates the parts of the website that should be updated.

=head1 OPTIONS

=over

=item B<-q>

Be less verbose

=item B<-v>

Be more verbose

=back

=head1 CONFIGURATION

Photog! reads configuration directives from a file named C<photog.ini>
inside the current directory. Subdirectories can contain additional
configuration files that override certain settings from the root
configuration file. Configuration files contain a number of C<variable
= value> directives. Lines starting with a C<#> are ignored.

=over

=item B<title>

In the default template, the title appears at the top of the
page. The default value is the name of an album's source directory.

=item B<copyright>

In the default template, the copyright information appears at the
bottom of the page. The default value is empty.

=item B<template>

Path to an HTML file containing directives in
L<Template::Toolkit(3pm)> syntax. By default, Photog! uses the file
C<index.template> in this module's C<static> directory.

=item B<destination>

The destination directory. This variable has no default, and MUST be
specified either as a command line argument OR in a configuration
file.

=item B<sort>

Photos are always sorted according to EXIF date. Possible sort orders
are: C<ascending> and C<descending>. The default value is
C<descending>.

=item B<preview>

The number of images to include in an album preview. Default: 9.

=item B<slug>

The URL slug of the album that will be created from the current
directory. The default value is the directory's name.

=item B<date>

The ISO 8601 date of this album. This is used when sorting items
chronologically. The default is the directory's modification date.

=item B<unlisted>

A boolean C<true> or C<false> that determines whether the current
album will be be unlisted on the parent webpage. The album page
remains accessible to people who know the URL. Defaults to C<false>.

=item B<private>

Like B<unlisted>, but Photog! will generate a random slug to use as
the album's URL and stores it in a file named C<PRIVATE.URL> inside
the album's source directory. Defaults to C<false>.

=item B<oblivious>

A boolean C<true> or C<false> that specifies whether C<photog.ini>
files are required. If C<true>, Photog! will only consider a
subdirectory an album when it contains a C<photog.ini> file, even if
the file is empty. Defaults to C<false>.

=back

=head1 SEE ALSO

L<Photography::Website(3pm)>, the Perl module that takes care of the
actual site generation.

=head1 AUTHOR

Photog! was written by Jaap Joris Vens <jj@rtts.eu>, and is used on
his personal photography website http://www.superformosa.nl/

=cut

my $verbose;
my $silent;

sub ask;
sub confirm;
sub username;

# Read command line args
for (@ARGV) {
    $verbose = 1 if $_ eq '-v';
    $silent = 1 if $_ eq '-q';
}

unless (-f "$ENV{HOME}/.photogrc") {
    my $config = {};
    my $config_template = (dist_dir 'Photog') . "/templates/photogrc";

    print << 'EOM';

This seems to be the first time you run Photog! To generate your
photography website, please answer the following questions. For more
information read the manual page by typing "man photog".

Please type your answer after each question and press Enter, or accept
the [default answer] by pressing Enter.

EOM

    $config->{artist} = ask 'What is your full name?', username;
    $config->{copyright} = ask 'What copyright applies to your images?', 'All Rights Reserved';
    if (confirm 'Do you want to store this information in the EXIF data of your images?') {
        $config->{manipulate_exif} = 'true';
    }
    else {
        $config->{manipulate_exif} = 'false';
    }
    $config->{pictures} = ask 'Where are your pictures stored?', "$ENV{HOME}/Pictures";
    $config->{website} = ask "Where should the website be stored?", cwd . "/photography";

    $tt->process($config_template, $config, "$ENV{HOME}/.photogrc") or die $!;

    print << 'EOM';
Thank you! Your answers have been saved to ~/.photogrc. Feel free to
edit this file to change the settings.

EOM
    unless (confirm "Do you want to start generating your photography website?") {
        print "\nYou can start website generation at any time by running `photog`";
        exit 1;
    }
}

# Read config file
my $conf = Config::General->new("$ENV{HOME}/.photogrc");
my %config = $conf->getall or die "Error in confuration file ~/photogrc\n";
$config{Verbose} = $verbose;
$config{Silent} = $silent;

# Check mandatory variables
for ('Artist', 'Copyright', 'Manipulate_EXIF', 'Pictures', 'Website') {
    unless (defined $config{$_}) {
        die "The mandatory variable \"$_\" is not present in the configuration file ~/.photogrc. Please add it manually or delete the file so photog can regenerate it.";
    }
}

Photography::Website::generate(\%config);

sub ask {
    my $question = shift;
    my $default_answer = shift;
    print "$question [$default_answer] ";
    my $answer = <>;
    chomp $answer;
    print "\n";
    if ($answer) {
        return $answer;
    }
    else {
        return $default_answer;
    }
}

sub confirm {
    my $prompt = shift;
    my $answer = "";
    until ($answer =~ /^[yn]$/) {
        $answer = ask $prompt, 'y/n';
    }
    return $answer eq 'y';
}

sub username {
    my $name = (getpwnam getlogin)[6];
    $name =~ s/,.*$//;
    return $name;
}
